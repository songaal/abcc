<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- default field : id, keyword -->
<mapper namespace="org.fastcatsearch.db.mapper.IndexingHistoryMapper">

	<update id="createTable">
		create table IndexingHistory (
		id int GENERATED ALWAYS AS IDENTITY,
		collectionId varchar(30),
		type varchar(30),
		step varchar(30),
		status varchar(30),
		docSize int,
		deleteSize int,
		isScheduled boolean,
		startTime timestamp,
		endTime timestamp DEFAULT NULL,
		duration int,
		primary key (id)
		)
	</update>
	
	<update id="createIndex" >
		create index collectionId_IndexingHistory_index on IndexingHistory(collectionId)
	</update>
	

	<select id="validateTable" parameterType="map" resultType="map">
		select id, collectionId, type, step, status, docSize
		from IndexingHistory
		fetch first 1 rows only
	</select>

	<update id="dropTable" parameterType="map">
		drop table IndexingHistory
	</update>

	<select id="getEntry" parameterType="int" resultType="org.fastcatsearch.db.vo.IndexingStatusVO">
		select *
		from IndexingHistory where id = #{id}
	</select>

	<select id="getEntryList" parameterType="map" resultType="org.fastcatsearch.db.vo.IndexingStatusVO">

		<if test="start &gt;= 0 and end &gt;= 0">
			select tmp2.* 
			from (
				select row_number() over() as rownum, tmp.* 
				from ( 
					select * from IndexingHistory where collectionId = #{collectionId}
					order by id desc 
			    ) as tmp 
			) tmp2
			where rownum &gt;= #{start} and rownum &lt;= #{end}
		</if>
	</select>

	<select id="getCount" parameterType="map" resultType="int">
		select count(*)
		from IndexingHistory
		where collectionId = #{collectionId}
	</select>

	<insert id="putEntry" parameterType="org.fastcatsearch.db.vo.IndexingStatusVO" useGeneratedKeys="true">
		insert into IndexingHistory ( 
		collectionId, type, step, status, docSize, deleteSize, isScheduled,
		startTime, endTime, duration) 
		values (
		#{collectionId}, #{type}, #{step}, #{status}, #{docSize},
		#{deleteSize}, #{isScheduled}, #{startTime}, #{endTime}, #{duration}
		)
	</insert>

</mapper>